{"ast":null,"code":"var _jsxFileName = \"/Users/alexanderclements/Projects/spacestagram/src/functionalComponents/ApplicationMain.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState, useEffect } from 'react';\nimport ApplicationBar from './ApplicationBar';\nimport ApplicationBody from './ApplicationBody';\nimport LoadMoreData from './LoadMoreData';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst initializeViewMode = () => {\n  const name = localStorage.getItem(\"viewMode\");\n\n  if (name) {\n    return name;\n  } else {\n    return \"random\";\n  }\n};\n\nexport default function ApplicationMain(props) {\n  _s();\n\n  const [dataLoaded, setDataLoaded] = useState(false);\n  const [loadMoreData, setLoadMoreData] = useState(false);\n  const [viewMode, setViewMode] = useState(initializeViewMode());\n  const [moreData, setMoreData] = useState(true);\n  useEffect(() => {\n    console.log(process.env.REACT_APP_API_KEY);\n    initializeViewMode();\n  }, []);\n\n  const handleDataLoaded = () => {\n    setDataLoaded(true);\n  };\n\n  const handleLoadMoreDataVisible = () => {\n    setLoadMoreData(true);\n  };\n\n  const handleExtraDataLoaded = () => {\n    setLoadMoreData(false);\n  };\n\n  const handleMenuItemClick = e => {\n    setViewMode(e);\n    localStorage.setItem(\"viewMode\", e);\n    window.location.reload();\n  };\n\n  const handleNoMoreData = () => {\n    setMoreData(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(ApplicationBar, {\n      onMenuItemClick: handleMenuItemClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ApplicationBody, {\n      onNoMoreData: handleNoMoreData,\n      viewMode: viewMode,\n      onExtraDataLoaded: handleExtraDataLoaded,\n      loadMoreData: loadMoreData,\n      onDataLoaded: handleDataLoaded\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(LoadMoreData, {\n      visible: moreData,\n      onVisible: handleLoadMoreDataVisible,\n      dataLoaded: dataLoaded\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ApplicationMain, \"sOWTZvi/a4LSGecMVazFpMu/o6s=\");\n\n_c = ApplicationMain;\n\nvar _c;\n\n$RefreshReg$(_c, \"ApplicationMain\");","map":{"version":3,"sources":["/Users/alexanderclements/Projects/spacestagram/src/functionalComponents/ApplicationMain.tsx"],"names":["React","useState","useEffect","ApplicationBar","ApplicationBody","LoadMoreData","initializeViewMode","name","localStorage","getItem","ApplicationMain","props","dataLoaded","setDataLoaded","loadMoreData","setLoadMoreData","viewMode","setViewMode","moreData","setMoreData","console","log","process","env","REACT_APP_API_KEY","handleDataLoaded","handleLoadMoreDataVisible","handleExtraDataLoaded","handleMenuItemClick","e","setItem","window","location","reload","handleNoMoreData"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,QAAR,EAAkBC,SAAlB,QAAkC,OAAlC;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,OAAOC,YAAP,MAAyB,gBAAzB;;;AAEA,MAAMC,kBAAkB,GAAG,MAAe;AACtC,QAAMC,IAAoB,GAAGC,YAAY,CAACC,OAAb,CAAqB,UAArB,CAA7B;;AAEA,MAAIF,IAAJ,EAAU;AACN,WAAOA,IAAP;AACH,GAFD,MAEO;AACH,WAAO,QAAP;AACH;AACJ,CARD;;AAUA,eAAe,SAASG,eAAT,CAAyBC,KAAzB,EAAsC;AAAA;;AACjD,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BZ,QAAQ,CAAC,KAAD,CAA5C;AACA,QAAM,CAACa,YAAD,EAAeC,eAAf,IAAkCd,QAAQ,CAAC,KAAD,CAAhD;AACA,QAAM,CAACe,QAAD,EAAWC,WAAX,IAA0BhB,QAAQ,CAACK,kBAAkB,EAAnB,CAAxC;AACA,QAAM,CAACY,QAAD,EAAWC,WAAX,IAA0BlB,QAAQ,CAAC,IAAD,CAAxC;AAGAC,EAAAA,SAAS,CAAC,MAAM;AACZkB,IAAAA,OAAO,CAACC,GAAR,CAAYC,OAAO,CAACC,GAAR,CAAYC,iBAAxB;AACAlB,IAAAA,kBAAkB;AACrB,GAHQ,EAGN,EAHM,CAAT;;AAKA,QAAMmB,gBAAgB,GAAG,MAAM;AAC3BZ,IAAAA,aAAa,CAAC,IAAD,CAAb;AACH,GAFD;;AAIA,QAAMa,yBAAyB,GAAG,MAAM;AACpCX,IAAAA,eAAe,CAAC,IAAD,CAAf;AACH,GAFD;;AAIA,QAAMY,qBAAqB,GAAG,MAAM;AAChCZ,IAAAA,eAAe,CAAC,KAAD,CAAf;AACH,GAFD;;AAMA,QAAMa,mBAAmB,GAAIC,CAAD,IAAkB;AAC1CZ,IAAAA,WAAW,CAACY,CAAD,CAAX;AACArB,IAAAA,YAAY,CAACsB,OAAb,CAAqB,UAArB,EAAiCD,CAAjC;AACAE,IAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB;AACH,GAJD;;AAMA,QAAMC,gBAAgB,GAAG,MAAM;AAC3Bf,IAAAA,WAAW,CAAC,KAAD,CAAX;AACH,GAFD;;AAIA,sBACI;AAAA,4BACI,QAAC,cAAD;AAAgB,MAAA,eAAe,EAAES;AAAjC;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,eAAD;AAAiB,MAAA,YAAY,EAAEM,gBAA/B;AAAiD,MAAA,QAAQ,EAAElB,QAA3D;AAAqE,MAAA,iBAAiB,EAAEW,qBAAxF;AAA+G,MAAA,YAAY,EAAEb,YAA7H;AAA2I,MAAA,YAAY,EAAEW;AAAzJ;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI,QAAC,YAAD;AAAc,MAAA,OAAO,EAAEP,QAAvB;AAAiC,MAAA,SAAS,EAAEQ,yBAA5C;AAAuE,MAAA,UAAU,EAAEd;AAAnF;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH;;GA3CuBF,e;;KAAAA,e","sourcesContent":["import React from 'react';\nimport {useState, useEffect} from 'react';\nimport ApplicationBar from './ApplicationBar';\nimport ApplicationBody from './ApplicationBody';\nimport LoadMoreData from './LoadMoreData';\n\nconst initializeViewMode = () : string => {\n    const name : string | null = localStorage.getItem(\"viewMode\");\n\n    if (name) {\n        return name;\n    } else {\n        return \"random\";\n    }\n}\n\nexport default function ApplicationMain(props : any) {\n    const [dataLoaded, setDataLoaded] = useState(false);\n    const [loadMoreData, setLoadMoreData] = useState(false);\n    const [viewMode, setViewMode] = useState(initializeViewMode());\n    const [moreData, setMoreData] = useState(true);\n    \n\n    useEffect(() => {\n        console.log(process.env.REACT_APP_API_KEY);\n        initializeViewMode();\n    }, [])\n\n    const handleDataLoaded = () => {\n        setDataLoaded(true);\n    }\n\n    const handleLoadMoreDataVisible = () => {\n        setLoadMoreData(true);\n    }\n\n    const handleExtraDataLoaded = () => {\n        setLoadMoreData(false);\n    }\n\n    type ViewMode = \"random\" | \"chronological\" | \"saved\";\n\n    const handleMenuItemClick = (e : ViewMode) => {\n        setViewMode(e);\n        localStorage.setItem(\"viewMode\", e);\n        window.location.reload();\n    }\n\n    const handleNoMoreData = () => {\n        setMoreData(false);\n    }\n\n    return (\n        <div>\n            <ApplicationBar onMenuItemClick={handleMenuItemClick} />\n            <ApplicationBody onNoMoreData={handleNoMoreData} viewMode={viewMode} onExtraDataLoaded={handleExtraDataLoaded} loadMoreData={loadMoreData} onDataLoaded={handleDataLoaded} />\n            <LoadMoreData visible={moreData} onVisible={handleLoadMoreDataVisible} dataLoaded={dataLoaded} />\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}