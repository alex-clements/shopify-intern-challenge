{"ast":null,"code":"var _jsxFileName = \"/Users/alexanderclements/Projects/spacestagram/src/functionalComponents/Accordion.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport { motion } from 'framer-motion';\nimport Typography from '@mui/material/Typography';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Accordion(props) {\n  _s();\n\n  const [imageTitle, setImageTitle] = useState(props.imageTitle);\n  const [imageExplanation, setImageExplanation] = useState(props.imageExplanation);\n  const [imageDate, setImageDate] = useState(props.imageDate);\n  const [expanded, setExpanded] = useState(props.expanded);\n  const [bodyHeight, setBodyHeight] = useState(100);\n  const bodyRef = useRef(null);\n  useEffect(() => {\n    calculateBodyHeight();\n    setExpanded(props.expanded);\n  }, [props.expanded]);\n  const initialBodyProps = {\n    \"height\": 0\n  };\n\n  const calculateBodyHeight = () => {\n    if (bodyRef.current != null) {\n      let tempRef = bodyRef.current.getBoundingClientRect().height;\n      setBodyHeight(tempRef);\n    }\n  };\n\n  const styleProps = {\n    overflow: \"hidden\"\n  };\n  const bodyContainerProps = {\n    \"paddingLeft\": \"10px\",\n    \"paddingRight\": \"10px\",\n    \"text-align\": \"left\"\n  };\n  const titleContainerProps = {\n    \"paddingLeft\": \"10px\",\n    \"paddingRight\": \"10px\"\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        gutterBottom: true,\n        variant: \"h5\",\n        component: \"div\",\n        children: imageTitle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body1\",\n        color: \"text.secondary\",\n        children: imageDate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(motion.div, {\n      style: styleProps,\n      initial: initialBodyProps,\n      animate: {\n        height: expanded ? bodyHeight : 0\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: bodyContainerProps,\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          ref: bodyRef,\n          variant: \"body2\",\n          color: \"text.secondary\",\n          children: imageExplanation\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Accordion, \"/drr+xuiORioLN9V/zdOJoL9tsg=\");\n\n_c = Accordion;\n\nvar _c;\n\n$RefreshReg$(_c, \"Accordion\");","map":{"version":3,"sources":["/Users/alexanderclements/Projects/spacestagram/src/functionalComponents/Accordion.tsx"],"names":["React","useState","useEffect","useRef","motion","Typography","Accordion","props","imageTitle","setImageTitle","imageExplanation","setImageExplanation","imageDate","setImageDate","expanded","setExpanded","bodyHeight","setBodyHeight","bodyRef","calculateBodyHeight","initialBodyProps","current","tempRef","getBoundingClientRect","height","styleProps","overflow","bodyContainerProps","titleContainerProps"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,EAAoCC,MAApC,QAAiD,OAAjD;AACA,SAAQC,MAAR,QAAqB,eAArB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;;AAEA,eAAe,SAASC,SAAT,CAAmBC,KAAnB,EAAgC;AAAA;;AAC3C,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BR,QAAQ,CAACM,KAAK,CAACC,UAAP,CAA5C;AACA,QAAM,CAACE,gBAAD,EAAmBC,mBAAnB,IAA0CV,QAAQ,CAACM,KAAK,CAACG,gBAAP,CAAxD;AACA,QAAM,CAACE,SAAD,EAAYC,YAAZ,IAA4BZ,QAAQ,CAACM,KAAK,CAACK,SAAP,CAA1C;AACA,QAAM,CAACE,QAAD,EAAWC,WAAX,IAA0Bd,QAAQ,CAACM,KAAK,CAACO,QAAP,CAAxC;AACA,QAAM,CAACE,UAAD,EAAaC,aAAb,IAA8BhB,QAAQ,CAAS,GAAT,CAA5C;AAEA,QAAMiB,OAAO,GAAGf,MAAM,CAAqB,IAArB,CAAtB;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZiB,IAAAA,mBAAmB;AACnBJ,IAAAA,WAAW,CAACR,KAAK,CAACO,QAAP,CAAX;AACH,GAHQ,EAGN,CAACP,KAAK,CAACO,QAAP,CAHM,CAAT;AAKA,QAAMM,gBAAgB,GAAG;AACrB,cAAW;AADU,GAAzB;;AAIA,QAAMD,mBAAmB,GAAG,MAAM;AAC9B,QAAID,OAAO,CAACG,OAAR,IAAmB,IAAvB,EAA6B;AACzB,UAAIC,OAAgB,GAAGJ,OAAO,CAACG,OAAR,CAAgBE,qBAAhB,GAAwCC,MAA/D;AACAP,MAAAA,aAAa,CAACK,OAAD,CAAb;AACH;AACJ,GALD;;AAOA,QAAMG,UAAU,GAAG;AACfC,IAAAA,QAAQ,EAAE;AADK,GAAnB;AAIA,QAAMC,kBAAkB,GAAG;AACvB,mBAAe,MADQ;AAEvB,oBAAgB,MAFO;AAGvB,kBAAc;AAHS,GAA3B;AAMA,QAAMC,mBAAmB,GAAG;AACxB,mBAAe,MADS;AAExB,oBAAgB;AAFQ,GAA5B;AAKA,sBACI;AAAA,4BACI;AAAA,8BACI,QAAC,UAAD;AAAY,QAAA,YAAY,MAAxB;AAAyB,QAAA,OAAO,EAAC,IAAjC;AAAsC,QAAA,SAAS,EAAC,KAAhD;AAAA,kBAAuDpB;AAAvD;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,UAAD;AAAY,QAAA,OAAO,EAAC,OAApB;AAA4B,QAAA,KAAK,EAAC,gBAAlC;AAAA,kBAAoDI;AAApD;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAKI,QAAC,MAAD,CAAQ,GAAR;AAAY,MAAA,KAAK,EAAEa,UAAnB;AAA+B,MAAA,OAAO,EAAEL,gBAAxC;AAA0D,MAAA,OAAO,EAAE;AAACI,QAAAA,MAAM,EAAEV,QAAQ,GAAGE,UAAH,GAAgB;AAAjC,OAAnE;AAAA,6BACI;AAAK,QAAA,KAAK,EAAEW,kBAAZ;AAAA,+BACI,QAAC,UAAD;AAAY,UAAA,GAAG,EAAET,OAAjB;AAA0B,UAAA,OAAO,EAAC,OAAlC;AAA0C,UAAA,KAAK,EAAC,gBAAhD;AAAA,oBAAkER;AAAlE;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YALJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAaH;;GArDuBJ,S;;KAAAA,S","sourcesContent":["import React, {useState, useEffect, useRef} from 'react';\nimport {motion} from 'framer-motion';\nimport Typography from '@mui/material/Typography';\n\nexport default function Accordion(props : any) {\n    const [imageTitle, setImageTitle] = useState(props.imageTitle);\n    const [imageExplanation, setImageExplanation] = useState(props.imageExplanation);\n    const [imageDate, setImageDate] = useState(props.imageDate);\n    const [expanded, setExpanded] = useState(props.expanded);\n    const [bodyHeight, setBodyHeight] = useState<number>(100);\n\n    const bodyRef = useRef<HTMLHeadingElement>(null);\n\n    useEffect(() => {\n        calculateBodyHeight();\n        setExpanded(props.expanded);\n    }, [props.expanded])\n\n    const initialBodyProps = {\n        \"height\" : 0,\n    }\n\n    const calculateBodyHeight = () => {\n        if (bodyRef.current != null) {\n            let tempRef : number = bodyRef.current.getBoundingClientRect().height;\n            setBodyHeight(tempRef);\n        }\n    }\n\n    const styleProps = {\n        overflow: \"hidden\"\n    }\n\n    const bodyContainerProps = {\n        \"paddingLeft\": \"10px\",\n        \"paddingRight\": \"10px\",\n        \"text-align\": \"left\"\n    }\n\n    const titleContainerProps = {\n        \"paddingLeft\": \"10px\",\n        \"paddingRight\": \"10px\",\n    }\n\n    return (\n        <div>\n            <div>\n                <Typography gutterBottom variant=\"h5\" component=\"div\">{imageTitle}</Typography>\n                <Typography variant=\"body1\" color=\"text.secondary\">{imageDate}</Typography>\n            </div>\n            <motion.div style={styleProps} initial={initialBodyProps} animate={{height: expanded ? bodyHeight : 0}} >\n                <div style={bodyContainerProps}>\n                    <Typography ref={bodyRef} variant=\"body2\" color=\"text.secondary\">{imageExplanation}</Typography>\n                </div>\n            </motion.div>\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}