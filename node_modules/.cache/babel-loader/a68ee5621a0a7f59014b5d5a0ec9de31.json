{"ast":null,"code":"export default function fetchDataAbstract(apiString){console.log(\"Fetching data from: \",apiString);var newAPIString=\"https://api.nasa.gov/planetary/apod?api_key=\"+process.env.REACT_APP_API_KEY+\"&test\";console.log(newAPIString);return fetch(apiString).then(function(response){if(response.ok){console.log(\"Rate Limit Remaining: \",response.headers.get(\"X-RateLimit-Remaining\"));return response.json();}else{throw new Error(\"Data fetch failed.\");}}).then(function(data){return data;}).catch(function(error){console.log(error);return[];});}","map":{"version":3,"sources":["/Users/alexanderclements/Projects/spacestagram/src/scripts/fetchDataAbstract.tsx"],"names":["fetchDataAbstract","apiString","console","log","newAPIString","process","env","REACT_APP_API_KEY","fetch","then","response","ok","headers","get","json","Error","data","catch","error"],"mappings":"AAAA,cAAe,SAASA,CAAAA,iBAAT,CAA2BC,SAA3B,CAA+C,CAC1DC,OAAO,CAACC,GAAR,CAAY,sBAAZ,CAAoCF,SAApC,EACA,GAAIG,CAAAA,YAAqB,CAAG,+CAAiDC,OAAO,CAACC,GAAR,CAAYC,iBAA7D,CAAiF,OAA7G,CACAL,OAAO,CAACC,GAAR,CAAYC,YAAZ,EACA,MAAOI,CAAAA,KAAK,CAACP,SAAD,CAAL,CACFQ,IADE,CACG,SAAAC,QAAQ,CAAI,CACd,GAAIA,QAAQ,CAACC,EAAb,CAAiB,CACbT,OAAO,CAACC,GAAR,CAAY,wBAAZ,CAAsCO,QAAQ,CAACE,OAAT,CAAiBC,GAAjB,CAAqB,uBAArB,CAAtC,EACA,MAAOH,CAAAA,QAAQ,CAACI,IAAT,EAAP,CACH,CAHD,IAGO,CACH,KAAM,IAAIC,CAAAA,KAAJ,CAAU,oBAAV,CAAN,CACH,CACJ,CARE,EASFN,IATE,CASG,SAAAO,IAAI,CAAI,CACV,MAAOA,CAAAA,IAAP,CACH,CAXE,EAYFC,KAZE,CAYI,SAACC,KAAD,CAAW,CACdhB,OAAO,CAACC,GAAR,CAAYe,KAAZ,EACA,MAAO,EAAP,CACH,CAfE,CAAP,CAgBH","sourcesContent":["export default function fetchDataAbstract(apiString : string) {\n    console.log(\"Fetching data from: \", apiString);\n    let newAPIString : string = \"https://api.nasa.gov/planetary/apod?api_key=\" + process.env.REACT_APP_API_KEY + \"&test\";\n    console.log(newAPIString);\n    return fetch(apiString)\n        .then(response => {\n            if (response.ok) {\n                console.log(\"Rate Limit Remaining: \", response.headers.get(\"X-RateLimit-Remaining\"));\n                return response.json();\n            } else {\n                throw new Error(\"Data fetch failed.\");\n            }\n        })\n        .then(data => {\n            return data;\n        })\n        .catch((error) => {\n            console.log(error);\n            return [];\n        })\n}"]},"metadata":{},"sourceType":"module"}