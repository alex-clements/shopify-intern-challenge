{"ast":null,"code":"var _jsxFileName = \"/Users/alexanderclements/Projects/spacestagram/src/functionalComponents/CardMediaComponent.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport CardMedia from '@mui/material/CardMedia';\nimport Skeleton from '@mui/material/Skeleton';\nimport { motion } from 'framer-motion';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CardMediaComponent(props) {\n  _s();\n\n  const [imageLoaded, setImageLoaded] = useState(false);\n  const [imageData, setImageData] = useState(props.imageURL);\n\n  const handleLoad = () => {\n    setImageLoaded(true);\n  };\n\n  const variants = {\n    \"opacity\": imageLoaded ? \"100%\" : \"0%\"\n  };\n  const initialProps = {\n    \"opacity\": \"0%\"\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(motion.div, {\n      initial: initialProps,\n      animate: variants,\n      children: /*#__PURE__*/_jsxDEV(CardMedia, {\n        component: \"img\",\n        height: imageLoaded ? \"300\" : \"0\",\n        image: imageData,\n        onLoad: handleLoad\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Skeleton, {\n      variant: \"rectangular\",\n      width: 300,\n      height: imageLoaded ? 0 : 300\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n}\n\n_s(CardMediaComponent, \"0H2cVEkHUTL2DR2jYPM0uxWO9Ao=\");\n\n_c = CardMediaComponent;\n\nvar _c;\n\n$RefreshReg$(_c, \"CardMediaComponent\");","map":{"version":3,"sources":["/Users/alexanderclements/Projects/spacestagram/src/functionalComponents/CardMediaComponent.tsx"],"names":["React","useState","CardMedia","Skeleton","motion","CardMediaComponent","props","imageLoaded","setImageLoaded","imageData","setImageData","imageURL","handleLoad","variants","initialProps"],"mappings":";;;AAAA,OAAOA,KAAP,IAA0BC,QAA1B,QAAyC,OAAzC;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,SAAQC,MAAR,QAAqB,eAArB;;AAEA,eAAe,SAASC,kBAAT,CAA4BC,KAA5B,EAAyC;AAAA;;AACpD,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCP,QAAQ,CAAC,KAAD,CAA9C;AACA,QAAM,CAACQ,SAAD,EAAYC,YAAZ,IAA4BT,QAAQ,CAACK,KAAK,CAACK,QAAP,CAA1C;;AAEA,QAAMC,UAAU,GAAG,MAAM;AACrBJ,IAAAA,cAAc,CAAC,IAAD,CAAd;AACH,GAFD;;AAIA,QAAMK,QAAQ,GAAG;AACb,eAAWN,WAAW,GAAG,MAAH,GAAY;AADrB,GAAjB;AAIA,QAAMO,YAAY,GAAG;AACjB,eAAW;AADM,GAArB;AAIA,sBACI;AAAA,4BACI,QAAC,MAAD,CAAQ,GAAR;AAAY,MAAA,OAAO,EAAEA,YAArB;AAAmC,MAAA,OAAO,EAAED,QAA5C;AAAA,6BACI,QAAC,SAAD;AACQ,QAAA,SAAS,EAAC,KADlB;AAEQ,QAAA,MAAM,EAAEN,WAAW,GAAG,KAAH,GAAW,GAFtC;AAGQ,QAAA,KAAK,EAAEE,SAHf;AAIQ,QAAA,MAAM,EAAEG;AAJhB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,eASI,QAAC,QAAD;AAAU,MAAA,OAAO,EAAC,aAAlB;AAAgC,MAAA,KAAK,EAAE,GAAvC;AAA4C,MAAA,MAAM,EAAEL,WAAW,GAAG,CAAH,GAAO;AAAtE;AAAA;AAAA;AAAA;AAAA,YATJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAaH;;GA7BuBF,kB;;KAAAA,kB","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport CardMedia from '@mui/material/CardMedia';\nimport Skeleton from '@mui/material/Skeleton';\nimport {motion} from 'framer-motion';\n\nexport default function CardMediaComponent(props : any) {\n    const [imageLoaded, setImageLoaded] = useState(false);\n    const [imageData, setImageData] = useState(props.imageURL);\n\n    const handleLoad = () => {\n        setImageLoaded(true);\n    }\n\n    const variants = {\n        \"opacity\": imageLoaded ? \"100%\" : \"0%\"\n    }\n\n    const initialProps = {\n        \"opacity\": \"0%\"\n    }\n\n    return (\n        <div>\n            <motion.div initial={initialProps} animate={variants}>\n                <CardMedia\n                        component=\"img\"\n                        height={imageLoaded ? \"300\" : \"0\"}\n                        image={imageData}\n                        onLoad={handleLoad}\n                        />\n            </motion.div>\n            <Skeleton variant=\"rectangular\" width={300} height={imageLoaded ? 0 : 300} />\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}