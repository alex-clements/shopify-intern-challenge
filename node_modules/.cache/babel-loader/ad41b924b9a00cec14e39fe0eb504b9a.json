{"ast":null,"code":"import _slicedToArray from\"/Users/alexanderclements/Projects/spacestagram/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useEffect,useState}from'react';import SwipeableDrawer from'@mui/material/SwipeableDrawer';import Divider from'@mui/material/Divider';import Typography from'@mui/material/Typography';import Toolbar from'@mui/material/Toolbar';import List from'@mui/material/List';import ListItem from'@mui/material/ListItem';import ListItemText from'@mui/material/ListItemText';import ListItemIcon from'@mui/material/ListItemIcon';import AccessTime from'@mui/icons-material/AccessTime';import FavoriteBorder from'@mui/icons-material/FavoriteBorder';import Shuffle from'@mui/icons-material/Shuffle';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default function DrawerComponent(props){var _useState=useState(props.menuOpen),_useState2=_slicedToArray(_useState,2),menuOpen=_useState2[0],setMenuOpen=_useState2[1];useEffect(function(){setMenuOpen(!menuOpen);},[props.menuOpen]);var initialProps={width:\"0px\"};var animateProps={width:menuOpen?\"300px\":\"0px\"};var handleSwipe=function handleSwipe(event){props.onMenuClickAway();};var styles={paper:\"backgroundColor : blue\"};var chronologicalMenuItemClick=function chronologicalMenuItemClick(){props.onMenuItemClick(\"chronological\");props.onMenuClickAway();};var savedMenuItemClick=function savedMenuItemClick(){props.onMenuItemClick(\"saved\");props.onMenuClickAway();};var randomMenuItemClick=function randomMenuItemClick(){props.onMenuItemClick(\"random\");props.onMenuClickAway();};return/*#__PURE__*/_jsxs(SwipeableDrawer,{anchor:\"right\",open:!menuOpen,onClose:handleSwipe,onOpen:handleSwipe,PaperProps:{sx:{\"backgroundColor\":\"#e1e1e1\",\"width\":\"240px\"}},children:[/*#__PURE__*/_jsx(Toolbar,{children:/*#__PURE__*/_jsx(Typography,{variant:\"h6\",component:\"div\",children:\"View Options\"})}),/*#__PURE__*/_jsx(Divider,{}),/*#__PURE__*/_jsxs(List,{children:[/*#__PURE__*/_jsxs(ListItem,{button:true,onClick:savedMenuItemClick,children:[/*#__PURE__*/_jsx(ListItemIcon,{children:/*#__PURE__*/_jsx(FavoriteBorder,{})}),/*#__PURE__*/_jsx(ListItemText,{primary:\"Liked\"})]}),/*#__PURE__*/_jsxs(ListItem,{button:true,onClick:chronologicalMenuItemClick,children:[/*#__PURE__*/_jsx(ListItemIcon,{children:/*#__PURE__*/_jsx(AccessTime,{})}),/*#__PURE__*/_jsx(ListItemText,{primary:\"Chronological\"})]}),/*#__PURE__*/_jsxs(ListItem,{button:true,onClick:randomMenuItemClick,children:[/*#__PURE__*/_jsx(ListItemIcon,{children:/*#__PURE__*/_jsx(Shuffle,{})}),/*#__PURE__*/_jsx(ListItemText,{primary:\"Random\"})]})]})]});}","map":{"version":3,"sources":["/Users/alexanderclements/Projects/spacestagram/src/functionalComponents/DrawerComponent.tsx"],"names":["React","useEffect","useState","SwipeableDrawer","Divider","Typography","Toolbar","List","ListItem","ListItemText","ListItemIcon","AccessTime","FavoriteBorder","Shuffle","DrawerComponent","props","menuOpen","setMenuOpen","initialProps","width","animateProps","handleSwipe","event","onMenuClickAway","styles","paper","chronologicalMenuItemClick","onMenuItemClick","savedMenuItemClick","randomMenuItemClick","sx"],"mappings":"oIAAA,MAAOA,CAAAA,KAAP,EAAeC,SAAf,CAA0BC,QAA1B,KAAyC,OAAzC,CACA,MAAOC,CAAAA,eAAP,KAA4B,+BAA5B,CAIA,MAAOC,CAAAA,OAAP,KAAoB,uBAApB,CACA,MAAOC,CAAAA,UAAP,KAAuB,0BAAvB,CACA,MAAOC,CAAAA,OAAP,KAAoB,uBAApB,CAEA,MAAOC,CAAAA,IAAP,KAAiB,oBAAjB,CACA,MAAOC,CAAAA,QAAP,KAAqB,wBAArB,CACA,MAAOC,CAAAA,YAAP,KAAyB,4BAAzB,CACA,MAAOC,CAAAA,YAAP,KAAyB,4BAAzB,CACA,MAAOC,CAAAA,UAAP,KAAuB,gCAAvB,CACA,MAAOC,CAAAA,cAAP,KAA2B,oCAA3B,CACA,MAAOC,CAAAA,OAAP,KAAoB,6BAApB,C,wFAEA,cAAe,SAASC,CAAAA,eAAT,CAAyBC,KAAzB,CAAsC,CACjD,cAAgCb,QAAQ,CAACa,KAAK,CAACC,QAAP,CAAxC,wCAAOA,QAAP,eAAiBC,WAAjB,eAEAhB,SAAS,CAAC,UAAM,CACZgB,WAAW,CAAC,CAACD,QAAF,CAAX,CACH,CAFQ,CAEN,CAACD,KAAK,CAACC,QAAP,CAFM,CAAT,CAIA,GAAME,CAAAA,YAAY,CAAG,CACjBC,KAAK,CAAE,KADU,CAArB,CAIA,GAAMC,CAAAA,YAAY,CAAG,CACjBD,KAAK,CAAEH,QAAQ,CAAG,OAAH,CAAa,KADX,CAArB,CAIA,GAAMK,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAACC,KAAD,CAA8B,CAC9CP,KAAK,CAACQ,eAAN,GACH,CAFD,CAIA,GAAMC,CAAAA,MAAM,CAAG,CACXC,KAAK,CAAE,wBADI,CAAf,CAIA,GAAMC,CAAAA,0BAA0B,CAAG,QAA7BA,CAAAA,0BAA6B,EAAM,CACrCX,KAAK,CAACY,eAAN,CAAsB,eAAtB,EACAZ,KAAK,CAACQ,eAAN,GACH,CAHD,CAKA,GAAMK,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,EAAM,CAC7Bb,KAAK,CAACY,eAAN,CAAsB,OAAtB,EACAZ,KAAK,CAACQ,eAAN,GACH,CAHD,CAKA,GAAMM,CAAAA,mBAAmB,CAAG,QAAtBA,CAAAA,mBAAsB,EAAM,CAC9Bd,KAAK,CAACY,eAAN,CAAsB,QAAtB,EACAZ,KAAK,CAACQ,eAAN,GACH,CAHD,CAKA,mBACA,MAAC,eAAD,EACE,MAAM,CAAE,OADV,CAEE,IAAI,CAAE,CAACP,QAFT,CAGE,OAAO,CAAEK,WAHX,CAIE,MAAM,CAAEA,WAJV,CAKE,UAAU,CAAE,CAACS,EAAE,CAAC,CAAC,kBAAmB,SAApB,CAA+B,QAAS,OAAxC,CAAJ,CALd,wBAOI,KAAC,OAAD,wBACI,KAAC,UAAD,EAAY,OAAO,CAAC,IAApB,CAAyB,SAAS,CAAC,KAAnC,0BADJ,EAPJ,cAUI,KAAC,OAAD,IAVJ,cAWI,MAAC,IAAD,yBACI,MAAC,QAAD,EAAU,MAAM,KAAhB,CAAiB,OAAO,CAAEF,kBAA1B,wBACI,KAAC,YAAD,wBACI,KAAC,cAAD,IADJ,EADJ,cAII,KAAC,YAAD,EAAc,OAAO,CAAE,OAAvB,EAJJ,GADJ,cAOI,MAAC,QAAD,EAAU,MAAM,KAAhB,CAAiB,OAAO,CAAEF,0BAA1B,wBACI,KAAC,YAAD,wBACI,KAAC,UAAD,IADJ,EADJ,cAII,KAAC,YAAD,EAAc,OAAO,CAAE,eAAvB,EAJJ,GAPJ,cAaI,MAAC,QAAD,EAAU,MAAM,KAAhB,CAAiB,OAAO,CAAEG,mBAA1B,wBACI,KAAC,YAAD,wBACI,KAAC,OAAD,IADJ,EADJ,cAII,KAAC,YAAD,EAAc,OAAO,CAAE,QAAvB,EAJJ,GAbJ,GAXJ,GADA,CAkCH","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport SwipeableDrawer from '@mui/material/SwipeableDrawer';\nimport {motion} from 'framer-motion';\nimport { MotionPhotosOffSharp } from '@mui/icons-material';\nimport { isAbsolute } from 'path/posix';\nimport Divider from '@mui/material/Divider';\nimport Typography from '@mui/material/Typography';\nimport Toolbar from '@mui/material/Toolbar';\nimport { ClassNames } from '@emotion/react';\nimport List from '@mui/material/List';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemText from '@mui/material/ListItemText';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport AccessTime from '@mui/icons-material/AccessTime';\nimport FavoriteBorder from '@mui/icons-material/FavoriteBorder';\nimport Shuffle from '@mui/icons-material/Shuffle';\n\nexport default function DrawerComponent(props : any) {\n    const [menuOpen, setMenuOpen] = useState(props.menuOpen);\n\n    useEffect(() => {\n        setMenuOpen(!menuOpen);\n    }, [props.menuOpen]);\n\n    const initialProps = {\n        width: \"0px\"\n    }\n\n    const animateProps = {\n        width: menuOpen ? \"300px\" : \"0px\"\n    }\n\n    const handleSwipe = (event : React.MouseEvent) => {\n        props.onMenuClickAway();\n    }\n\n    const styles = {\n        paper: \"backgroundColor : blue\"\n    }\n\n    const chronologicalMenuItemClick = () => {\n        props.onMenuItemClick(\"chronological\");\n        props.onMenuClickAway()\n    }\n\n    const savedMenuItemClick = () => {\n        props.onMenuItemClick(\"saved\");\n        props.onMenuClickAway()\n    }\n\n    const randomMenuItemClick = () => {\n        props.onMenuItemClick(\"random\");\n        props.onMenuClickAway()\n    }\n\n    return (\n    <SwipeableDrawer\n      anchor={\"right\"}\n      open={!menuOpen}\n      onClose={handleSwipe}\n      onOpen={handleSwipe}\n      PaperProps={{sx:{\"backgroundColor\": \"#e1e1e1\", \"width\": \"240px\"}}}\n    >\n        <Toolbar>\n            <Typography variant=\"h6\" component=\"div\">View Options</Typography>\n        </Toolbar>\n        <Divider />\n        <List>\n            <ListItem button onClick={savedMenuItemClick}>\n                <ListItemIcon>\n                    <FavoriteBorder />\n                </ListItemIcon>\n                <ListItemText primary={\"Liked\"} />\n            </ListItem>\n            <ListItem button onClick={chronologicalMenuItemClick}>\n                <ListItemIcon>\n                    <AccessTime />\n                </ListItemIcon>\n                <ListItemText primary={\"Chronological\"} />\n            </ListItem>\n            <ListItem button onClick={randomMenuItemClick}>\n                <ListItemIcon>\n                    <Shuffle />\n                </ListItemIcon>\n                <ListItemText primary={\"Random\"} />\n            </ListItem>\n        </List>\n    </SwipeableDrawer>\n    )\n}"]},"metadata":{},"sourceType":"module"}