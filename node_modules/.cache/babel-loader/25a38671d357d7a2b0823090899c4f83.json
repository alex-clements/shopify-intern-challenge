{"ast":null,"code":"export class HelperFunctions {\n  formatDate(myDate) {\n    let myDays = myDate.getDate().toString();\n    let myMonths = (myDate.getMonth() + 1).toString();\n    let myYear = myDate.getFullYear().toString();\n    let myString = myYear + \"-\" + myMonths.padStart(2, \"0\") + \"-\" + myDays.padStart(2, \"0\");\n    return myString;\n  }\n\n  getEndDateStartDate(nextAvailableDate) {\n    let startDate = new Date();\n    let endDate = new Date();\n    let dateOffset = 24 * 60 * 60 * 1000 * 5;\n    startDate.setTime(new Date(nextAvailableDate).getTime());\n    endDate.setTime(new Date(nextAvailableDate).getTime() - dateOffset);\n    let startDateString = this.formatDate(startDate);\n    let endDateString = this.formatDate(endDate);\n    return [startDateString, endDateString];\n  }\n\n  getNextDate(nextAvailableDate) {\n    let startDate = new Date();\n    startDate.setTime(new Date(nextAvailableDate).getTime());\n    let nextDate = new Date();\n    let dateOffset = 24 * 60 * 60 * 1000 * 6;\n    nextDate.setTime(startDate.getTime() - dateOffset);\n    return nextDate.toString();\n  }\n\n}","map":{"version":3,"sources":["/Users/alexanderclements/Projects/spacestagram/src/scripts/HelperFunctions.tsx"],"names":["HelperFunctions","formatDate","myDate","myDays","getDate","toString","myMonths","getMonth","myYear","getFullYear","myString","padStart","getEndDateStartDate","nextAvailableDate","startDate","Date","endDate","dateOffset","setTime","getTime","startDateString","endDateString","getNextDate","nextDate"],"mappings":"AAAA,OAAO,MAAMA,eAAN,CAAsB;AACzBC,EAAAA,UAAU,CAACC,MAAD,EAAgB;AACtB,QAAIC,MAAe,GAAGD,MAAM,CAACE,OAAP,GAAiBC,QAAjB,EAAtB;AACA,QAAIC,QAAiB,GAAG,CAACJ,MAAM,CAACK,QAAP,KAAoB,CAArB,EAAwBF,QAAxB,EAAxB;AACA,QAAIG,MAAe,GAAGN,MAAM,CAACO,WAAP,GAAqBJ,QAArB,EAAtB;AACA,QAAIK,QAAiB,GAAGF,MAAM,GAAG,GAAT,GAAeF,QAAQ,CAACK,QAAT,CAAkB,CAAlB,EAAqB,GAArB,CAAf,GAA2C,GAA3C,GAAiDR,MAAM,CAACQ,QAAP,CAAgB,CAAhB,EAAmB,GAAnB,CAAzE;AACA,WAAOD,QAAP;AACH;;AAEDE,EAAAA,mBAAmB,CAACC,iBAAD,EAA6C;AAC5D,QAAIC,SAAgB,GAAG,IAAIC,IAAJ,EAAvB;AACA,QAAIC,OAAc,GAAG,IAAID,IAAJ,EAArB;AAEA,QAAIE,UAAmB,GAAI,KAAK,EAAL,GAAU,EAAV,GAAe,IAAhB,GAAwB,CAAlD;AAEAH,IAAAA,SAAS,CAACI,OAAV,CAAkB,IAAIH,IAAJ,CAASF,iBAAT,EAA4BM,OAA5B,EAAlB;AACAH,IAAAA,OAAO,CAACE,OAAR,CAAgB,IAAIH,IAAJ,CAASF,iBAAT,EAA4BM,OAA5B,KAAwCF,UAAxD;AAEA,QAAIG,eAAwB,GAAG,KAAKnB,UAAL,CAAgBa,SAAhB,CAA/B;AACA,QAAIO,aAAsB,GAAG,KAAKpB,UAAL,CAAgBe,OAAhB,CAA7B;AAEA,WAAO,CAACI,eAAD,EAAkBC,aAAlB,CAAP;AACH;;AAEDC,EAAAA,WAAW,CAACT,iBAAD,EAAsC;AAC7C,QAAIC,SAAgB,GAAG,IAAIC,IAAJ,EAAvB;AACAD,IAAAA,SAAS,CAACI,OAAV,CAAkB,IAAIH,IAAJ,CAASF,iBAAT,EAA4BM,OAA5B,EAAlB;AACA,QAAII,QAAe,GAAG,IAAIR,IAAJ,EAAtB;AACA,QAAIE,UAAmB,GAAI,KAAK,EAAL,GAAU,EAAV,GAAe,IAAhB,GAAwB,CAAlD;AACAM,IAAAA,QAAQ,CAACL,OAAT,CAAiBJ,SAAS,CAACK,OAAV,KAAsBF,UAAvC;AACA,WAAOM,QAAQ,CAAClB,QAAT,EAAP;AACH;;AA/BwB","sourcesContent":["export class HelperFunctions {\n    formatDate(myDate : Date) {\n        let myDays : string = myDate.getDate().toString();\n        let myMonths : string = (myDate.getMonth() + 1).toString();\n        let myYear : string = myDate.getFullYear().toString();\n        let myString : string = myYear + \"-\" + myMonths.padStart(2, \"0\") + \"-\" + myDays.padStart(2, \"0\");\n        return myString;\n    }\n\n    getEndDateStartDate(nextAvailableDate : string) : Array<string> {\n        let startDate : Date = new Date();\n        let endDate : Date = new Date();\n\n        let dateOffset : number = (24 * 60 * 60 * 1000) * 5;\n\n        startDate.setTime(new Date(nextAvailableDate).getTime());\n        endDate.setTime(new Date(nextAvailableDate).getTime() - dateOffset);\n\n        let startDateString : string = this.formatDate(startDate);\n        let endDateString : string = this.formatDate(endDate);\n\n        return [startDateString, endDateString]\n    }\n\n    getNextDate(nextAvailableDate : string) : string {\n        let startDate : Date = new Date();\n        startDate.setTime(new Date(nextAvailableDate).getTime());\n        let nextDate : Date = new Date();\n        let dateOffset : number = (24 * 60 * 60 * 1000) * 6;\n        nextDate.setTime(startDate.getTime() - dateOffset);\n        return nextDate.toString();\n    }\n\n    \n}"]},"metadata":{},"sourceType":"module"}