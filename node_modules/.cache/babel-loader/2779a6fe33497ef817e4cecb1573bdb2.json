{"ast":null,"code":"import _asyncToGenerator from\"/Users/alexanderclements/Projects/spacestagram/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"/Users/alexanderclements/Projects/spacestagram/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _regeneratorRuntime from\"/Users/alexanderclements/Projects/spacestagram/node_modules/@babel/runtime/regenerator/index.js\";import React from'react';import{useEffect,useState}from'react';import ImageCard from'./ImageCard';import getStorageItems from'../scripts/getStorageItems';import fetchDataAbstract from'../scripts/fetchDataAbstract';import{HelperFunctions}from'../scripts/HelperFunctions';import CustomProgress from'./CustomProgress';import fetchSavedData from'../scripts/fetchSavedData';import{jsx as _jsx}from\"react/jsx-runtime\";export default function ApplicationBody(props){var helper_functions=new HelperFunctions();var _useState=useState([]),_useState2=_slicedToArray(_useState,2),imageData=_useState2[0],setImageData=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),imageDataLoaded=_useState4[0],setImageDataLoaded=_useState4[1];var _useState5=useState(props.viewMode),_useState6=_slicedToArray(_useState5,2),viewMode=_useState6[0],setViewMode=_useState6[1];var _useState7=useState(new Date().toString()),_useState8=_slicedToArray(_useState7,2),nextAvailableDate=_useState8[0],setNextAvailableDate=_useState8[1];var _useState9=useState(0),_useState10=_slicedToArray(_useState9,2),currentSavedIndex=_useState10[0],setCurrentSavedIndex=_useState10[1];var _useState11=useState(getStorageItems()),_useState12=_slicedToArray(_useState11,2),savedImageDates=_useState12[0],setSavedImageDates=_useState12[1];useEffect(function(){switch(viewMode){case\"random\":{fetchImageDataRandom();break;}case\"chronological\":{fetchImageDataChron();break;}case\"saved\":{fetchImageDataSaved();break;}}},[]);useEffect(function(){if(props.loadMoreData){switch(viewMode){case\"random\":{fetchAdditionalDataRandom();break;}case\"chronological\":{fetchAdditionalDataChron();break;}case\"saved\":{fetchAdditionalSavedImage();}}}},[props.loadMoreData]);useEffect(function(){setViewMode(props.viewMode);},[props.viewMode]);var fetchImageDataSaved=function fetchImageDataSaved(){var allDates=savedImageDates;var index=currentSavedIndex;var allDatesLength=allDates.length;var myArray=[];var i;for(i=index;i<index+5;i++){if(i<allDatesLength){myArray.push(allDates[i]);}}fetchSavedData(myArray).then(function(data){return savedImageDataHandler(data);}).then(function(){if(i>=allDates.length){props.onNoMoreData();}});setCurrentSavedIndex(index+5);};var fetchAdditionalSavedImage=function fetchAdditionalSavedImage(){var allDates=savedImageDates;var index=currentSavedIndex;var allDatesLength=allDates.length;var myArray=[];var i;for(i=index;i<index+5;i++){if(i<allDatesLength){myArray.push(allDates[i]);}}fetchSavedData(myArray).then(function(data){return additionalImageDataHandler(data);}).then(function(){if(i>=allDates.length){props.onNoMoreData();}});setCurrentSavedIndex(index+5);};var fetchImageDataChron=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var startDateEndDateStrings,startDateString,endDateString,apiString,nextDate;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:startDateEndDateStrings=helper_functions.getEndDateStartDate(nextAvailableDate);startDateString=startDateEndDateStrings[0];endDateString=startDateEndDateStrings[1];apiString=\"https://api.nasa.gov/planetary/apod?api_key=Bm1rwlnBAeqpKdnPnc5Qqke49sbZONaRPJvejW0O&start_date=\"+endDateString+\"&end_date=\"+startDateString;fetchDataAbstract(apiString).then(function(new_data){return imageDataHandler(new_data);});nextDate=helper_functions.getNextDate(nextAvailableDate);setNextAvailableDate(nextDate);case 7:case\"end\":return _context.stop();}}},_callee);}));return function fetchImageDataChron(){return _ref.apply(this,arguments);};}();var fetchAdditionalDataChron=function fetchAdditionalDataChron(){var startDateEndDateStrings=helper_functions.getEndDateStartDate(nextAvailableDate);var startDateString=startDateEndDateStrings[0];var endDateString=startDateEndDateStrings[1];var apiString=\"https://api.nasa.gov/planetary/apod?api_key=Bm1rwlnBAeqpKdnPnc5Qqke49sbZONaRPJvejW0O&start_date=\"+endDateString+\"&end_date=\"+startDateString;fetchDataAbstract(apiString).then(function(new_data){return additionalImageDataHandler(new_data);});var nextDate=helper_functions.getNextDate(nextAvailableDate);setNextAvailableDate(nextDate);};var fetchImageDataRandom=function fetchImageDataRandom(){var apiString='https://api.nasa.gov/planetary/apod?api_key=Bm1rwlnBAeqpKdnPnc5Qqke49sbZONaRPJvejW0O&count=5';fetchDataAbstract(apiString).then(function(new_data){return imageDataHandler(new_data);});};var fetchAdditionalDataRandom=function fetchAdditionalDataRandom(){var apiString='https://api.nasa.gov/planetary/apod?api_key=Bm1rwlnBAeqpKdnPnc5Qqke49sbZONaRPJvejW0O&count=5';fetchDataAbstract(apiString).then(function(new_data){return additionalImageDataHandler(new_data);});};var imageDataHandler=function imageDataHandler(data){if(viewMode==\"chronological\"){data=data.reverse();}setImageData(data);setImageDataLoaded(true);props.onDataLoaded();};var additionalImageDataHandler=function additionalImageDataHandler(data){if(viewMode==\"chronological\"){data=data.reverse();}var existingImageData=imageData;var newArray=existingImageData.concat(data);setImageData(newArray);props.onExtraDataLoaded();};var savedImageDataHandler=function savedImageDataHandler(data){setImageData(data);setImageDataLoaded(true);props.onDataLoaded();};var styleProps={\"backgroundColor\":\"#e1e1e1\",\"paddingTop\":\"10px\",\"paddingBottom\":\"20px\",\"minHeight\":\"calc(100vh - 200px)\"};return/*#__PURE__*/_jsx(\"div\",{style:styleProps,children:imageDataLoaded?imageData.map(function(item,index){return/*#__PURE__*/_jsx(ImageCard,{data:item,componentTabIndex:index*2+2},index);}):/*#__PURE__*/_jsx(CustomProgress,{})});}","map":{"version":3,"sources":["/Users/alexanderclements/Projects/spacestagram/src/functionalComponents/ApplicationBody.tsx"],"names":["React","useEffect","useState","ImageCard","getStorageItems","fetchDataAbstract","HelperFunctions","CustomProgress","fetchSavedData","ApplicationBody","props","helper_functions","imageData","setImageData","imageDataLoaded","setImageDataLoaded","viewMode","setViewMode","Date","toString","nextAvailableDate","setNextAvailableDate","currentSavedIndex","setCurrentSavedIndex","savedImageDates","setSavedImageDates","fetchImageDataRandom","fetchImageDataChron","fetchImageDataSaved","loadMoreData","fetchAdditionalDataRandom","fetchAdditionalDataChron","fetchAdditionalSavedImage","allDates","index","allDatesLength","length","myArray","i","push","then","data","savedImageDataHandler","onNoMoreData","additionalImageDataHandler","startDateEndDateStrings","getEndDateStartDate","startDateString","endDateString","apiString","new_data","imageDataHandler","nextDate","getNextDate","reverse","onDataLoaded","existingImageData","newArray","concat","onExtraDataLoaded","styleProps","map","item"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {useEffect, useState} from 'react';\nimport ImageCard from './ImageCard';\nimport getStorageItems from '../scripts/getStorageItems';\nimport fetchDataAbstract from '../scripts/fetchDataAbstract';\nimport {HelperFunctions} from '../scripts/HelperFunctions';\nimport CustomProgress from './CustomProgress';\nimport fetchSavedData from '../scripts/fetchSavedData';\n\n\nexport default function ApplicationBody(props : any) {\n    let helper_functions : HelperFunctions = new HelperFunctions();\n\n\n    const [imageData, setImageData] = useState<Array<any>>([]);\n    const [imageDataLoaded, setImageDataLoaded] = useState(false);\n    const [viewMode, setViewMode] = useState(props.viewMode);\n    const [nextAvailableDate, setNextAvailableDate] = useState(new Date().toString())\n    const [currentSavedIndex, setCurrentSavedIndex] = useState(0);\n    const [savedImageDates, setSavedImageDates] = useState(getStorageItems());\n\n    useEffect(() => {\n        switch (viewMode) {\n            case \"random\": {\n                fetchImageDataRandom();\n                break;\n            }\n            case \"chronological\": {\n                fetchImageDataChron();\n                break;\n            }\n            case \"saved\": {\n                fetchImageDataSaved();\n                break;\n            }\n        }\n    }, [])\n\n    useEffect(() => {\n        if (props.loadMoreData) {\n            switch(viewMode) {\n                case \"random\": {\n                    fetchAdditionalDataRandom();\n                    break;\n                }\n                case \"chronological\": {\n                    fetchAdditionalDataChron();\n                    break;\n                }\n                case \"saved\": {\n                    fetchAdditionalSavedImage();\n                }\n            }\n        }\n    }, [props.loadMoreData]);\n\n    useEffect(() => {\n        setViewMode(props.viewMode);\n    }, [props.viewMode])\n\n    const fetchImageDataSaved = () => {\n        let allDates : Array<string> = savedImageDates;\n        let index : number = currentSavedIndex;\n        let allDatesLength = allDates.length;\n        let myArray : Array<string> = [];\n        var i : number;\n\n        for (i = index; i < index + 5; i++) {\n            if (i < allDatesLength) {\n                myArray.push(allDates[i])\n            }\n        }\n\n        fetchSavedData(myArray)\n        .then(data => savedImageDataHandler(data))\n        .then(() => {\n            if (i >= allDates.length) {\n                props.onNoMoreData();\n            }\n        })\n\n        setCurrentSavedIndex(index + 5);\n    }\n\n    const fetchAdditionalSavedImage = () => {\n        let allDates : Array<string> = savedImageDates;\n        let index : number = currentSavedIndex;\n        let allDatesLength = allDates.length;\n        let myArray : Array<string> = [];\n        var i : number;\n\n        for (i = index; i < index + 5; i++) {\n            if (i < allDatesLength) {\n                myArray.push(allDates[i])\n            }\n        }\n\n        fetchSavedData(myArray)\n        .then(data => additionalImageDataHandler(data))\n        .then(() => {\n            if (i >= allDates.length) {\n                props.onNoMoreData();\n            }\n        });\n        setCurrentSavedIndex(index + 5);\n        \n    }\n\n    const fetchImageDataChron = async () => {\n        let startDateEndDateStrings = helper_functions.getEndDateStartDate(nextAvailableDate);\n        let startDateString : string = startDateEndDateStrings[0];\n        let endDateString : string = startDateEndDateStrings[1];\n\n        let apiString = \"https://api.nasa.gov/planetary/apod?api_key=Bm1rwlnBAeqpKdnPnc5Qqke49sbZONaRPJvejW0O&start_date=\" + endDateString + \"&end_date=\" + startDateString;\n        fetchDataAbstract(apiString).then(new_data => imageDataHandler(new_data));\n\n        let nextDate : string = helper_functions.getNextDate(nextAvailableDate);\n        setNextAvailableDate(nextDate);\n    }\n\n    const fetchAdditionalDataChron = () => {\n        let startDateEndDateStrings = helper_functions.getEndDateStartDate(nextAvailableDate);\n        let startDateString : string = startDateEndDateStrings[0];\n        let endDateString : string = startDateEndDateStrings[1];\n\n        let apiString = \"https://api.nasa.gov/planetary/apod?api_key=Bm1rwlnBAeqpKdnPnc5Qqke49sbZONaRPJvejW0O&start_date=\" + endDateString + \"&end_date=\" + startDateString;\n        fetchDataAbstract(apiString).then(new_data => additionalImageDataHandler(new_data));\n\n        let nextDate : string = helper_functions.getNextDate(nextAvailableDate);\n        setNextAvailableDate(nextDate);\n    }\n\n    const fetchImageDataRandom = () => {\n        let apiString : string = 'https://api.nasa.gov/planetary/apod?api_key=Bm1rwlnBAeqpKdnPnc5Qqke49sbZONaRPJvejW0O&count=5';\n        fetchDataAbstract(apiString).then(new_data => imageDataHandler(new_data));\n    }\n\n    const fetchAdditionalDataRandom = () => {\n        let apiString : string = 'https://api.nasa.gov/planetary/apod?api_key=Bm1rwlnBAeqpKdnPnc5Qqke49sbZONaRPJvejW0O&count=5';\n        fetchDataAbstract(apiString).then(new_data => additionalImageDataHandler(new_data));\n    }\n\n    const imageDataHandler = (data : any) => {\n        if (viewMode == \"chronological\") {\n            data = data.reverse();\n        }\n        setImageData(data);\n        setImageDataLoaded(true);\n        props.onDataLoaded();\n    }\n\n    const additionalImageDataHandler = (data : any) => {\n        if (viewMode == \"chronological\") {\n            data = data.reverse();\n        }\n        const existingImageData = imageData;\n        const newArray = existingImageData.concat(data);\n        setImageData(newArray);\n        props.onExtraDataLoaded(); \n    }\n\n    const savedImageDataHandler = (data : any) => {\n        setImageData(data);\n        setImageDataLoaded(true);\n        props.onDataLoaded();\n    }\n\n    const styleProps = {\n        \"backgroundColor\": \"#e1e1e1\",\n        \"paddingTop\": \"10px\",\n        \"paddingBottom\": \"20px\",\n        \"minHeight\": \"calc(100vh - 200px)\",\n    }\n\n    return (\n        <div style={styleProps}>\n                {imageDataLoaded ? imageData.map((item, index) => <ImageCard data={item} key={index} componentTabIndex={index * 2 + 2} />) : <CustomProgress />}\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}