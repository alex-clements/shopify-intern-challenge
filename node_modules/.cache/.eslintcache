[{"/Users/alexanderclements/Projects/shopify-intern-challenge/src/index.tsx":"1","/Users/alexanderclements/Projects/shopify-intern-challenge/src/reportWebVitals.ts":"2","/Users/alexanderclements/Projects/shopify-intern-challenge/src/App.tsx":"3","/Users/alexanderclements/Projects/shopify-intern-challenge/src/hooks/ApplicationMain.tsx":"4","/Users/alexanderclements/Projects/shopify-intern-challenge/src/hooks/ApplicationBar.tsx":"5","/Users/alexanderclements/Projects/shopify-intern-challenge/src/hooks/ApplicationBody.tsx":"6","/Users/alexanderclements/Projects/shopify-intern-challenge/src/hooks/ImageCard.tsx":"7"},{"size":500,"mtime":1641795622633,"results":"8","hashOfConfig":"9"},{"size":425,"mtime":1641795622634,"results":"10","hashOfConfig":"9"},{"size":401,"mtime":1641797411623,"results":"11","hashOfConfig":"9"},{"size":399,"mtime":1641796222343,"results":"12","hashOfConfig":"9"},{"size":578,"mtime":1641799769924,"results":"13","hashOfConfig":"9"},{"size":1502,"mtime":1641802573481,"results":"14","hashOfConfig":"9"},{"size":2421,"mtime":1641802779756,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"1amglxz",{"filePath":"19","messages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23"},{"filePath":"24","messages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30"},{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33"},"/Users/alexanderclements/Projects/shopify-intern-challenge/src/index.tsx",[],["34","35"],"/Users/alexanderclements/Projects/shopify-intern-challenge/src/reportWebVitals.ts",[],"/Users/alexanderclements/Projects/shopify-intern-challenge/src/App.tsx",["36"],"import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport ApplicationMain from './hooks/ApplicationMain';\nimport '@fontsource/roboto/300.css';\nimport '@fontsource/roboto/400.css';\nimport '@fontsource/roboto/500.css';\nimport '@fontsource/roboto/700.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <ApplicationMain />\n    </div>\n  );\n}\n\nexport default App;\n","/Users/alexanderclements/Projects/shopify-intern-challenge/src/hooks/ApplicationMain.tsx",[],"/Users/alexanderclements/Projects/shopify-intern-challenge/src/hooks/ApplicationBar.tsx",[],"/Users/alexanderclements/Projects/shopify-intern-challenge/src/hooks/ApplicationBody.tsx",["37","38"],"import React from 'react';\nimport {useEffect, useState} from 'react';\nimport ImageCard from './ImageCard';\nimport Grid from '@mui/material/Grid';\nimport { CircularProgress } from '@mui/material';\n\nexport default function ApplicationBody(props : any) {\n    const [imageData, setImageData] = useState([]);\n    const [imageDataLoaded, setImageDataLoaded] = useState(false);\n\n    useEffect(() => {\n        console.log(\"Application Body\");\n        fetchImageData();\n    }, [])\n\n    const fetchImageData = () => {\n        fetch('https://api.nasa.gov/planetary/apod?api_key=Bm1rwlnBAeqpKdnPnc5Qqke49sbZONaRPJvejW0O&count=5')\n        .then(response => response.json())\n        .then(data => imageDataHandler(data));\n    }\n\n    const imageDataHandler = (data : any) => {\n        setImageData(data);\n        setImageDataLoaded(true);\n        console.log(\"Image data loaded\");\n    }\n\n    const styleProps = {\n        \"backgroundColor\": \"#e1e1e1\",\n        \"paddingTop\": \"10px\",\n        \"paddingBottom\": \"20px\",\n        \"minHeight\": \"100vh\"\n    }\n\n    const CustomProgress = (props : any) => {\n        const customProgressStyleProps = {\n            \"marginTop\": \"50vh\"\n        }\n        return (\n            <div style={customProgressStyleProps}>\n                <CircularProgress />\n            </div>\n        )\n    }\n\n    return (\n        <div style={styleProps}>\n                {imageDataLoaded ? imageData.map((item, index) => <ImageCard data={item} key={index} />) : <CustomProgress />}\n        </div>\n    )\n}","/Users/alexanderclements/Projects/shopify-intern-challenge/src/hooks/ImageCard.tsx",["39"],"import React from 'react';\nimport { useState, useEffect } from 'react';\nimport Card from '@mui/material/Card';\nimport CardMedia from '@mui/material/CardMedia';\nimport CardContent from '@mui/material/CardContent';\nimport CardActions from '@mui/material/CardActions';\nimport Typography from '@mui/material/Typography';\nimport Accordion from '@mui/material/Accordion';\nimport AccordionSummary from '@mui/material/AccordionSummary';\nimport AccordionDetails from '@mui/material/AccordionDetails';\nimport Skeleton from '@mui/material/Skeleton';\nimport Button from '@mui/material/Button';\n\nexport default function ImageCard(props : any) {\n    const [imageData, setImageData] = useState(props.data)\n    const [expanded, setExpanded] = useState(false)\n    const [imageLoaded, setImageLoaded] = useState(false)\n\n    useEffect(() => {\n        console.log(imageData);\n    })\n\n    const handleClick = () => {\n        setExpanded(!expanded);\n    }\n\n    const handleLoad = () => {\n        setImageLoaded(true);\n        console.log(\"Image loaded: \", imageData['title']);\n    }\n\n    return (\n        <Card sx={{maxWidth: 300, margin: \"auto\", marginTop: 2}}>\n            <div onClick={handleClick}>\n                <CardMedia\n                component=\"img\"\n                height={imageLoaded ? \"300\" : \"0\"}\n                image={imageData['url']}\n                onLoad={handleLoad}\n                />\n                <Skeleton variant=\"rectangular\" width={300} height={imageLoaded ? 0 : 300} />\n                <CardContent sx={{paddingX: 0, paddingY: 1, paddingBottom: 1}}>\n                    <Accordion expanded={expanded} \n                    sx={{width: 300, border: \"none\", \"boxShadow\": \"0px 0px\", \"textAlign\": \"center\", \"& .MuiAccordionSummary-content\": {\"marginY\": \"0px\"}}}\n                    >\n                        <AccordionSummary sx={{paddingX: 1, marginTop: 0}}>\n                        <Typography gutterBottom variant=\"h5\" component=\"div\">{imageData['title']}</Typography>\n                        </AccordionSummary>\n                        <AccordionDetails>\n                        <Typography variant=\"body2\" color=\"text.secondary\">{imageData['explanation']}</Typography>\n                        </AccordionDetails>\n                    </Accordion>\n                </CardContent>\n            </div>\n            <CardActions>\n                <Button>Like</Button>\n            </CardActions>\n        </Card>\n    )\n}",{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","severity":1,"message":"45","line":2,"column":8,"nodeType":"46","messageId":"47","endLine":2,"endColumn":12},{"ruleId":"44","severity":1,"message":"48","line":4,"column":8,"nodeType":"46","messageId":"47","endLine":4,"endColumn":12},{"ruleId":"49","severity":1,"message":"50","line":14,"column":8,"nodeType":"51","endLine":14,"endColumn":10,"suggestions":"52"},{"ruleId":"44","severity":1,"message":"53","line":15,"column":23,"nodeType":"46","messageId":"47","endLine":15,"endColumn":35},"no-native-reassign",["54"],"no-negated-in-lhs",["55"],"@typescript-eslint/no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'Grid' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchImageData'. Either include it or remove the dependency array.","ArrayExpression",["56"],"'setImageData' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"57","fix":"58"},"Update the dependencies array to be: [fetchImageData]",{"range":"59","text":"60"},[468,470],"[fetchImageData]"]